service: scraper-crons

useDotenv: true

provider:
  name: aws
  stage: dev
  runtime: nodejs12.x
  region: 'us-east-1'
  timeout: 60 # in seconds
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    ENV: ${env.ENV}
    #DEBUG: '*'

plugins:
  - serverless-webpack
  - serverless-offline

layers:
  HeadlessChrome:
    name: HeadlessChrome
    description: Required for headlessChrome
    compatibleRuntimes:
      - nodejs12.x
    package:
      artifact: layers/chrome_aws_lambda.zip
  Prisma:
    name: Prisma
    description: Required for Prisma client
    compatibleRuntimes:
      - nodejs12.x
    package:
      artifact: layers/prisma-client.zip

custom:
  webpack:
    webpackConfig: webpack.config.js
    packager: 'yarn'
    includeModules:
      nodeModulesRelativeDir: '../../'
      packagePath: '../../package.json'
      forceInclude:
        - puppeteer-extra
        - puppeteer-extra-plugin-stealth
      forceExclude:
        - aws-sdk
        - puppeteer
        - puppeteer-core
        - chrome-aws-lambda
        - '@prisma/client'

functions:
  comic-cron:
    name: comic-cron-${self:provider.stage}
    handler: src/main.verifyAllComicsHandler
    layers:
      - { Ref: HeadlessChromeLambdaLayer }
      - { Ref: PrismaLambdaLayer }
    events:
      - schedule: cron(14 00 * * ? *) # rate(1 minute) # cron(14 00 * * ? *)
